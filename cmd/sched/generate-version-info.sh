#!/bin/bash

# Generates go code with git version information to stdout

branch=$(git rev-parse --abbrev-ref HEAD)
revision=$(git rev-parse HEAD)
commit_date=$(git show -s --format=%ct) # unix timestamp

# retrieve tagged version
# $version will be empty if the current revision is not tagged
version=$(git describe --tags --exact-match 2> /dev/null)

code=$(cat <<EOM
package main

import "time"

// DO NOT EDIT!
// file generated by generate-version-info.sh

const (
	commit_date int64 = ${commit_date}
	revision          = "${revision}"
	branch            = "${branch}"
	version           = "${version}"
)

// SchedVersion returns the version of 'sched'
// The version is updated by running the following command from the project dir:
// go generate ./cmd/sched
func SchedVersion() string {
	cd := time.Unix(commit_date, 0).UTC()
	date := cd.Format(time.RFC3339)
	full := ""
	if version != "" {
		full = version + " " + date
	} else if branch != "" {
		full = branch + "@" + revision + " " + date
	} else {
		full = "N/A - run 'go generate ./cmd/sched'"
	}
	return full
}

func init() {
	schedVersion = SchedVersion
}
EOM
)

echo "${code}"
